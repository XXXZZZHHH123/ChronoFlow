name: CI/CD Pipeline
on:
  push:
    branches:
      - main
      - feature/ci
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build & JUnit & Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Lint (Spotless + Checkstyle)
        run: mvn -B spotless:check checkstyle:check

      - name: Build & Run tests
        run: mvn -B clean verify

  sonarjobs:
    name: Sonar Jobs
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.ref == 'refs/heads/test' || github.ref == 'refs/heads/feature/ci' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: zulu

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
          SONAR_PROJECT_KEY:  ${{ secrets.SONAR_PROJECT_KEY }}
        run: |
          mvn -B clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.organization="${SONAR_ORGANIZATION}" \
          -Dsonar.projectKey="${SONAR_PROJECT_KEY}" \