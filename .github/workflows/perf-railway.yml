name: Performance Test (Railway)

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  railway-gatling:
    runs-on: ubuntu-latest
    env:
      RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
      RAILWAY_GATLING_SERVICE_ID: ${{ secrets.RAILWAY_GATLING_SERVICE_ID }}
    steps:
      - name: Validate configuration
        id: config
        run: |
          missing=0
          if [ -z "${RAILWAY_TOKEN}" ]; then
            echo "::error::RAILWAY_TOKEN secret is not set."
            missing=1
          fi
          if [ -z "${RAILWAY_GATLING_SERVICE_ID}" ]; then
            echo "::error::RAILWAY_GATLING_SERVICE_ID secret is not set."
            missing=1
          fi
          if [ "${missing}" -eq 0 ]; then
            echo "should-run=true" >> "$GITHUB_OUTPUT"
          else
            echo "should-run=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Abort when configuration is incomplete
        if: ${{ steps.config.outputs.should-run == 'false' }}
        run: echo "Skipping Railway Gatling job because required secrets are missing."

      - name: Checkout repository
        if: ${{ steps.config.outputs.should-run == 'true' }}
        uses: actions/checkout@v4

      - name: Install Railway CLI
        if: ${{ steps.config.outputs.should-run == 'true' }}
        run: npm install -g @railway/cli

      - name: Authenticate Railway CLI
        if: ${{ steps.config.outputs.should-run == 'true' }}
        run: |
          printf '%s\n' "$RAILWAY_TOKEN" | railway login --browserless

      - name: Trigger Railway redeploy
        if: ${{ steps.config.outputs.should-run == 'true' }}
        run: |
          set -euo pipefail
          railway redeploy --service "$RAILWAY_GATLING_SERVICE_ID" --yes

      - name: Wait for Gatling completion
        if: ${{ steps.config.outputs.should-run == 'true' }}
        run: |
          set -euo pipefail
          log_file="gatling-railway.log"
          : > "${log_file}"
          deadline=$((SECONDS + 900))
          while [ "${SECONDS}" -lt "${deadline}" ]; do
            tmp_log="$(mktemp)"
            if railway logs --service "$RAILWAY_GATLING_SERVICE_ID" --lines 200 > "${tmp_log}" 2>&1; then
              cat "${tmp_log}"
              cat "${tmp_log}" >> "${log_file}"
              if grep -q "GATLING_RESULT=" "${tmp_log}"; then
                if grep -q "GATLING_RESULT=failure" "${tmp_log}"; then
                  echo "Detected Gatling failure in Railway logs." >&2
                  exit 1
                fi
                exit 0
              fi
            else
              cat "${tmp_log}" >&2
              cat "${tmp_log}" >> "${log_file}"
            fi
            rm -f "${tmp_log}"
            sleep 15
          done
          echo "Timed out waiting for Gatling result in Railway logs." >&2
          exit 1

      - name: Upload Railway Gatling logs
        if: ${{ steps.config.outputs.should-run == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: railway-gatling-logs-${{ github.run_id }}-${{ github.run_attempt }}
          path: gatling-railway.log
          retention-days: 3
